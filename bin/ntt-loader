#!/usr/bin/env bash
# Author: PB, Claude, and Kimi
# Date: 2025-01-02
# License: (c) HRDAG, 2025, GPL-2 or newer
#
# ------
# ntt/bin/ntt-loader
#
# NTT loader – streaming .raw (034/NUL) → Postgres
set -euo pipefail

FILE=${1:?file.raw required}
MEDIUM_HASH=${2:?medium_hash required}
DB_URL=${NTT_DB_URL:-postgres:///copyjob}
LOG_JSON=${NTT_LOADER_LOG:-/var/log/ntt/loader.jsonl}

mkdir -p "$(dirname "$LOG_JSON")"
chmod 755 "$(dirname "$LOG_JSON")" 2>/dev/null || true

# ---------- logging functions ----------
log() {
  jq -cn --arg ts "$(date -Iseconds)" \
        --arg stage "$1" \
        --argjson extra "$2" \
        '$extra + {ts: $ts, stage: $stage}' \
  >> "$LOG_JSON"
  chmod 644 "$LOG_JSON" 2>/dev/null || true
}

fail() {
  echo "Error: $1" >&2
  log error "{\"msg\": \"$1\"}"
  exit 1
}

# ---------- 1. streaming COPY into temp table ----------
echo "Creating temp table..." >&2
log start "{\"file\": \"$FILE\", \"medium_hash\": \"$MEDIUM_HASH\"}"

psql "$DB_URL" -c "
CREATE TEMP TABLE tmp_path (
  medium_hash text,
  dev         bigint,
  ino         bigint,
  nlink       int,
  size        bigint,
  mtime       bigint,
  path        text
) ON COMMIT DROP;
" || fail "Failed to create temp table"

# ---------- 2. raw → temp (034 delimiter) ----------
echo "Loading raw data into temp table..." >&2
log load_start "{\"file\": \"$FILE\"}"

psql "$DB_URL" -c "
COPY tmp_path(medium_hash,dev,ino,nlink,size,mtime,path)
FROM STDIN
WITH (FORMAT text, DELIMITER E'\\x1C', NULL '');
" < "$FILE" || fail "Failed to load raw data into temp table"

# ---------- 3. dedupe into real tables ----------
echo "Deduplicating into final tables..." >&2
log dedupe_start "{\"medium_hash\": \"$MEDIUM_HASH\"}"

psql "$DB_URL" -c "
-- medium row (if new)
INSERT INTO medium (medium_hash, added_at)
SELECT DISTINCT medium_hash, now()
FROM   tmp_path
ON CONFLICT DO NOTHING;

-- inode rows (unique by medium_hash,dev,ino)
INSERT INTO inode (medium_hash,dev,ino,nlink,size,mtime)
SELECT medium_hash,dev,ino,MAX(nlink),MAX(size),MAX(mtime)
FROM   tmp_path
GROUP  BY medium_hash,dev,ino
ON CONFLICT (medium_hash,dev,ino) DO NOTHING;

-- path rows (unique by full path)
INSERT INTO path (medium_hash,dev,ino,path)
SELECT medium_hash,dev,ino,path
FROM   tmp_path
ON CONFLICT (medium_hash,dev,ino,path) DO NOTHING;
" || fail "Failed to deduplicate into final tables"

# ---------- 4. summary ----------
ROWS=$(psql "$DB_URL" -t -A -c "SELECT count(*) FROM path WHERE medium_hash='$MEDIUM_HASH'" || echo "unknown")
echo "✓ Loading complete: $ROWS paths loaded for medium $MEDIUM_HASH" >&2
log done "{\"rows\": $ROWS, \"exit\": 0}"

exit 0
